{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://enti.com/v1/defs/app.def.json",
    "name": "app",
    "title": "enti",
    "description": "enti app def",
    "type": "object",
    "definitions": {
        "Id": {
            "title": "Id",
            "type": "string",
            "minLength": 26,
            "maxLength": 26
        },
        "Json": {
            "title": "Json",
            "oneOf": [
                {"type": "array"}, // TODO would be nice to have this be a generic with default type to `any`, so `Json` and `Json<MyType>` both work
                {"type": "object"},
                {"type": "boolean"},
                {"type": "number"},
                {"type": "integer"},
                {"type": "string"},
                {"type": "null"}
            ]
        },
        "Entity": { // k/v, id/defs
            "title": "Entity",
            "type": "object",
            // TODO set of defs
            "properties": {
                "id": { "$ref": "#/definitions/Id" }
            },
            "patternProperties": {
                "^[a-zA-Z0-9]+$": { "$ref": "#/definitions/Json" }
            }
            // ultimately, generics? so lists of defs? so make ad-hoc defs? because 1 def instance per def is limiting
            // arbitrary properties will likely be wanted, composition at definition site (for maximum authoring expressivity)
        },
        "ClientState": {
            "title": "ClientState",
            "type": "object",
            "properties": {
                "entities": {
                    "type": "object",
                    // TODO map of ids/names Entity defs
                    "patternProperties": {
                        "^[A-Z0-9]{26}$": { // TODO how to extract this? also some chars like O are omitted, also need to account for arbitrary strings (oneOf)
                            "$ref": "#/definitions/Entity"
                        },
                        "^[a-zA-Z0-9]+": { // TODO be more lenient?
                            "$ref": "#/definitions/Entity"
                        }
                    }
                }
            },
            "required": [
                "entities"
            ]
        },
        "DataSource": {
            "title": "DataSource",
            "type": "object",
            "properties": {
                "kind": {
                    "enum": [
                        "sql",
                        "mongo"
                    ]
                },
                "id": {
                    "$ref": "#/definitions/Id"
                },
                "title": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            },
            "required": [
                "kind",
                "id",
                "title",
                "uri"
            ]
        },
        "Query": {
            "title": "Query",
            "oneOf": [
                {
                    "$ref": "#/definitions/NewQuery"
                },
                {
                    "$ref": "#/definitions/PendingQuery"
                },
                {
                    "$ref": "#/definitions/RejectedQuery"
                },
                {
                    "$ref": "#/definitions/ResolvedQuery"
                }
            ]
        },
        "NewQuery": {
            "title": "NewQuery",
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "value": "new"
                },
                "id": {
                    "$ref": "#/definitions/Id"
                },
                "sourceId": {
                    "$ref": "#/definitions/Id"
                },
                "title": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "lastExecuted": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ]
                }
            },
            "required": [
                "status",
                "id",
                "sourceId",
                "title",
                "raw",
                "lastExecuted"
            ]
        },
        "PendingQuery": {
            "title": "PendingQuery",
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "value": "pending"
                },
                "id": {
                    "$ref": "#/definitions/Id"
                },
                "sourceId": {
                    "$ref": "#/definitions/Id"
                },
                "title": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "lastExecuted": {
                    "type": "string"
                }
            },
            "required": [
                "status",
                "id",
                "sourceId",
                "title",
                "raw",
                "lastExecuted"
            ]
        },
        "RejectedQuery": {
            "title": "RejectedQuery",
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "value": "failed"
                },
                "id": {
                    "$ref": "#/definitions/Id"
                },
                "sourceId": {
                    "$ref": "#/definitions/Id"
                },
                "title": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "lastExecuted": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "status",
                "id",
                "sourceId",
                "title",
                "raw",
                "lastExecuted",
                "error"
            ]
        },
        "ResolvedQuery": {
            "title": "ResolvedQuery",
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "value": "resolved"
                },
                "id": {
                    "$ref": "#/definitions/Id"
                },
                "sourceId": {
                    "$ref": "#/definitions/Id"
                },
                "title": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "lastExecuted": {
                    "type": "string"
                },
                "results": {
                    "oneOf": [
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "null"
                        },
                        {
                            "type": "number"
                        },
                        {
                            "type": "object"
                        },
                        {
                            "type": "string"
                        }
                    ]
                }
            },
            "required": [
                "status",
                "id",
                "sourceId",
                "title",
                "raw",
                "lastExecuted",
                "results"
            ]
        },
        "BaseAction": {
            "title": "BaseAction",
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Id"
                }
            }
        },
        "ActionType": {
            "title": "ActionType",
            "enum": [
                "UpdateEntityAction",
                "SignUpUserAction",
                "SignInUserAction",
                "SignOutUserAction",
                "CreateQueryAction",
                "ReadQueryAction",
                "UpdateQueryAction",
                "DeleteQueryAction",
                "ExecuteQueryAction",
                "ExecuteSuccessQueryAction",
                "SetActiveQueryAction"
            ]
        },
        "Action": {
            "title": "Action",
            "oneOf": [
                {
                    "$ref": "#/definitions/UpdateEntityAction"
                },
                {
                    "$ref": "#/definitions/SignUpUserAction"
                },
                {
                    "$ref": "#/definitions/SignInUserAction"
                },
                {
                    "$ref": "#/definitions/SignOutUserAction"
                },
                {
                    "$ref": "#/definitions/CreateQueryAction"
                },
                {
                    "$ref": "#/definitions/ReadQueryAction"
                },
                {
                    "$ref": "#/definitions/UpdateQueryAction"
                },
                {
                    "$ref": "#/definitions/DeleteQueryAction"
                },
                {
                    "$ref": "#/definitions/ExecuteQueryAction"
                },
                {
                    "$ref": "#/definitions/ExecuteSuccessQueryAction"
                },
                {
                    "$ref": "#/definitions/SetActiveQueryAction"
                }
                
            ]
        },
        // TODO action enhanced with id, cid, other meta info
        // cids, client ids, are used to dedupe - the time value tells you who wins
        "UpdateEntityAction": {
            "title": "UpdateEntityAction",
            "type": "object",
            "id": "Entity/Update",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "UpdateEntityAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/Id"
                        },
                        "key": { // aka which definition/component you're targetting for this id - TODO still bridging ecs with jsonschema
                            "type": "string"
                        },
                        "value": {
                            "$ref": "#/definitions/Json"
                        }
                    },
                    "required": [
                        "id",
                        "key",
                        "value"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "SignUpUserAction": {
            "title": "SignUpUserAction",
            "type": "object",
            "id": "User/SignUp",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "SignUpUserAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "email"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "SignInUserAction": {
            "title": "SignInUserAction",
            "type": "object",
            "id": "User/SignIn",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "SignInUserAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "password": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "email",
                        "password"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "SignOutUserAction": {
            "title": "SignOutUserAction",
            "type": "object",
            "id": "User/SignOut",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "SignOutUserAction" },
                "payload": {"type": "null"}
            },
            "required":[
                "type",
                "payload"
            ]
        },
        "CreateQueryAction": {
            "title": "CreateQueryAction",
            "type": "object",
            "id": "Query/Create",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "CreateQueryAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "query": {
                            "$ref": "#/definitions/Query"
                        }
                    },
                    "required": [
                        "query"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "ReadQueryAction": {
            "title": "ReadQueryAction",
            "type": "object",
            "id": "Query/Read",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "ReadQueryAction" },
                "payload": {"type": "null"}
            },
            "required":[
                "type",
                "payload"
            ]
        },
        "UpdateQueryAction": { // TODO make generic
            "title": "UpdateQueryAction",
            "type": "object",
            "id": "Query/Update",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "UpdateQueryAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/Id"
                        },
                        "sourceId": {
                            "$ref": "#/definitions/Id"
                        },
                        "title": {
                            "type": "string"
                        },
                        "raw": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "DeleteQueryAction": {
            "title": "DeleteQueryAction",
            "type": "object",
            "id": "Query/Delete",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "DeleteQueryAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/Id"
                        }
                    },
                    "required": [
                        "id"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "ExecuteQueryAction": {
            "title": "ExecuteQueryAction",
            "type": "object",
            "id": "Query/Execute",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "ExecuteQueryAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/Id"
                        }
                    },
                    "required": [
                        "id"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "ExecuteSuccessQueryAction": {
            "title": "ExecuteSuccessQueryAction",
            "type": "object",
            "id": "Query/ExecuteSuccess",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "ExecuteSuccessQueryAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/Id"
                        },
                        "results": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "id",
                        "results"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "SetActiveQueryAction": { // TODO probably belongs in some ui context or something
            "title": "SetActiveQueryAction",
            "type": "object",
            "id": "Query/SetActive",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseAction"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/ActionType", "value": "SetActiveQueryAction" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "$ref": "#/definitions/Id"
                        }
                    },
                    "required": [
                        "id"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "CharacterCategoryType": {
            "title": "CharacterCategoryType",
            "enum": [
                "base",
                "hair",
                "beard",
                "body",
                "legs",
                "hand1",
                "hand2",
                "head",
                "gloves",
                "boots",
                "cloak",
                "felids",
                "drcwing",
                "drchead",

                // TODO didn't survive the transfer, make this data def?
                // ommitted - see `ommittedCategories`
                "barding",
                "ench",
                "halo",
                "mutations",
                "transform"
            ]
        },
        "ImageData": {
            "title": "ImageData",
            "type": "object",
            "properties": {
                "url": {"type": "string"},
                "parts": {"type": "array", "items": {"type": "string"}},
                "category": {"$ref": "#/definitions/CharacterCategoryType"}
            }
        },
        "BaseMessage": {
            "title": "BaseMessage",
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/Id"
                }
            }
        },
        "MessageType": {
            "title": "MessageType",
            "enum": [
                "InitMessage",
                "ActionPerformedMessage"
            ]
        },
        "Message": {
            "title": "Message",
            "oneOf": [
                {
                    "$ref": "#/definitions/InitMessage"
                },
                {
                    "$ref": "#/definitions/ActionPerformedMessage"
                }
            ]
        },
        "InitMessage": {
            "title": "InitMessage",
            "type": "object",
            "id": "User/SignUp",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseMessage"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/MessageType", "value": "InitMessage" },
                "payload": {
                    "type": "null"
                }
            },
            "required": [
                "type",
                "payload"
            ]
        },
        "ActionPerformedMessage": {
            "title": "ActionPerformedMessage",
            "type": "object",
            "id": "User/SignUp",
            "allOf": [
                {
                    "$ref": "#/definitions/BaseMessage"
                }
            ],
            "properties": {
                "type": { "$ref": "#/definitions/MessageType", "value": "ActionPerformedMessage" },
                "payload": {
                    "type": "object",
                    "properties": {
                        "action": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "required": [
                        "action"
                    ]
                }
            },
            "required": [
                "type",
                "payload"
            ]
        }
    },
    "properties": {
        // 
        // TODO? what goes here
        // session: {},
        // apps:  {
        //   histories: {actions: [], }
        // },
        // 
    }
}